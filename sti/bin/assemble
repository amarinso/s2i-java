#!/bin/bash
. $(dirname $0)/functions

HOME=/opt/app-root/src

echo "** Customized s2i for OASP4J applications"

ARTIFACT_DIR=${ARTIFACT_DIR:-server/target}
APP_SUFFIX=${APP_SUFFIX:--bootified}
APP_EXTENSION=${APP_EXTENSION:-jar}

# we will move any code provided by s2i to here
LOCAL_SOURCE_DIR=${HOME}/source
mkdir -p $LOCAL_SOURCE_DIR
# TODO: Verify a $HOME is set

# Resulting artifact files will be deployed to /opt/openshift
DEPLOY_DIR=/opt/openshift

# Copy the source for compilation
# TODO: Remove. Why do we need to move the source???
if compgen -G "/tmp/src/*" >/dev/null; then
  mkdir -p $LOCAL_SOURCE_DIR
  cp -ad /tmp/src/* $LOCAL_SOURCE_DIR
fi


if [ -d $LOCAL_SOURCE_DIR/configuration ]; then
  echo "Copying config files from project..."

  if [ -f $LOCAL_SOURCE_DIR/configuration/settings.xml ]; then
    mkdir -p $HOME/.m2
    mv $LOCAL_SOURCE_DIR/configuration/settings.xml $HOME/.m2
  fi

  #Â We move the rest of the configuration, if provided to the place where the app will run
  cp -v $LOCAL_SOURCE_DIR/configuration/* $DEPLOY_DIR
fi

configure_proxy
configure_mirrors

manage_incremental_build

# the subdirectory within LOCAL_SOURCE_DIR from where we should copy build
# artifacts (*.war, *.jar)
ARTIFACT_DIR=${ARTIFACT_DIR:-target}

pushd $LOCAL_SOURCE_DIR &> /dev/null

MAVEN_ARGS=${MAVEN_ARGS--e -Popenshift -DskipTests -Dcom.redhat.xpaas.repo.redhatga install}

# Always force IPv4 (CLOUD-188)
# Append user-supplied arguments (CLOUD-412)
MAVEN_ARGS="$MAVEN_ARGS -Djava.net.preferIPv4Stack=true ${MAVEN_ARGS_APPEND}"

echo "Found pom.xml... attempting to build with 'mvn ${MAVEN_ARGS}'"

echo "Using $(mvn --version)"

# Execute the actual build
mvn $MAVEN_ARGS

ERR=$?
if [ $ERR -ne 0 ]; then
echo "Aborting due to error code $ERR from Maven build"
exit $ERR
fi

# Copy built artifacts (if any!) from the target/ directory
# (or $ARTIFACT_DIR if specified)
# to the $DEPLOY_DIR directory for later deployment
copy_artifacts "$ARTIFACT_DIR" "$APP_EXTENSION"

# optionally clear the local maven repository after the build
clear_maven_repository

popd &> /dev/null

echo "listing contens for debugging build image"
echo "ls -l ${LOCAL_SOURCE_DIR}"
ls -l ${LOCAL_SOURCE_DIR}

echo "ls -l ${HOME}"
ls -l ${HOME}

echo "ls -l ${ARTIFACT_DIR}"
ls -l ${ARTIFACT_DIR}

# As Microservices you should only have 1 fat jar
# if compgen -G "/tmp/src/*" >/dev/null; then
# TODO: Review how best move these
echo "ls ${LOCAL_SOURCE_DIR}/${ARTIFACT_APP}"
ls -h ${LOCAL_SOURCE_DIR}/${ARTIFACT_APP}

if [ -n "$DEBUG_BUILD" ]; then
	 echo "DEBUG_BUILD: $DEBUG_BUILD"
	 echo "HOME: $HOME"
	 echo "LOCAL_SOURCE_DIR: $LOCAL_SOURCE_DIR"
	 echo "ARTIFACT_DIR: $ARTIFACT_DIR"
	 echo "ARTIFACT_APP: $ARTIFACT_APP"
	 echo "APP_EXTENSION: $APP_EXTENSION"
	 echo "DEPLOY_DIR: $DEPLOY_DIR"
	  echo "Output of the build process"
	  find .
fi


if [ $(ls ${DEPLOY_DIR}/*${APP_SUFFIX}.${APP_EXTENSION} | wc -l) -eq 1 ]; then
  echo "[INFO] Copying ${DEPLOY_DIR}/*${APP_SUFFIX}.${APP_EXTENSION} into ${DEPLOY_DIR}/app.$APP_EXTENSION"
  cp ${DEPLOY_DIR}/*${APP_SUFFIX}.${APP_EXTENSION} ${DEPLOY_DIR}/app.${APP_EXTENSION}
  [ ! -f ${DEPLOY_DIR}/app.${APP_EXTENSION} ] && echo "Application could not be properly built." && exit 1
  echo "[INFO] Application $APP_EXTENSION file is located in ${DEPLOY_DIR}/app.${APP_EXTENSION}"
else
  echo "[ERROR] No app.$APP_EXTENSION file located in ${DEPLOY_DIR}"
  exit 1
fi

exit 0
